{"version":3,"file":"static/js/579.4e4d3816.chunk.js","mappings":"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","sources":["api/todo.tsx","main/components/style.js","main/components/Modal.tsx","pages/todo/index.tsx","pages/todo/style/todoStyle.js","utiis/Media.tsx"],"sourcesContent":["import { ITodoDeleteData, ITodoPutData, ITodos } from \"../types/todo\";\r\nimport API from \"./../utiis/API\";\r\n\r\nconst TodoAPI = {\r\n  createToDo: (data: ITodos) => {\r\n    return API.post(\"/todos/test\", data);\r\n  },\r\n  getToDo: () => {\r\n    return API.get(`/todos`);\r\n  },\r\n  deleteTodo: ({ seq }: ITodoDeleteData) => {\r\n    return API.post(`/todos/remove`, { seq });\r\n  },\r\n  detailTodo: (id: string | undefined) => {\r\n    return API.get(`/todos/${id}`);\r\n  },\r\n\r\n  updateTodo: (id: string | undefined, { data }: ITodoPutData) => {\r\n    return API.put(`/todos/${id}`, data);\r\n  },\r\n\r\n  postTodo: (formData: any) => {\r\n    return API.post(`/todos/image`, formData, {});\r\n  },\r\n  getTodoImage: (id: string | undefined) => {\r\n    return API.get(`/todos/image/${id}`);\r\n  },\r\n};\r\n\r\nexport default TodoAPI;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalDiv = styled.div`\r\n  & > div.filebox label {\r\n    display: inline-block;\r\n    padding: 0.5em 0.75em;\r\n    color: #fff;\r\n    font-size: inherit;\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n\r\n    cursor: pointer;\r\n    border: 1px solid #ebebeb;\r\n    border-bottom-color: #e2e2e2;\r\n    border-radius: 0.25em;\r\n    background-color: #5cb85c;\r\n    border-color: #4cae4c;\r\n  }\r\n  & > div.filebox input[type=\"file\"] {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    border: 0;\r\n  }\r\n`;\r\n","import { Button, Modal, Input, ModalHeader, ModalOverlay, ModalContent, ModalFooter, ModalCloseButton, ModalBody } from \"@chakra-ui/react\";\r\nimport { ITodos } from \"../../types/todo\";\r\nimport { BsPlusCircle } from \"react-icons/bs\";\r\nimport { ModalDiv } from \"./style\";\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n  onOpen: (btn: string) => void;\r\n  onClose: () => void;\r\n  change: (e: React.ChangeEvent<HTMLInputElement>, type: string) => void;\r\n  action: (id: any) => void;\r\n  title: string;\r\n  value: ITodos;\r\n  modalStatus: boolean;\r\n  formAction: (e: any) => void;\r\n  fileChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport const IModal: React.FC<Props> = ({ title, value, isOpen, modalStatus, change, action, onOpen, onClose, formAction, fileChange }) => {\r\n  return (\r\n    <>\r\n      <BsPlusCircle\r\n        size=\"30px\"\r\n        color=\"rgb(64 189 68)\"\r\n        onClick={() => {\r\n          onOpen(\"\");\r\n        }}\r\n      />\r\n\r\n      <Modal blockScrollOnMount={false} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>{title}</ModalHeader>\r\n          <ModalCloseButton />\r\n          {modalStatus ? (\r\n            <ModalBody>삭제하시겠습니까?</ModalBody>\r\n          ) : (\r\n            <ModalBody>\r\n              <form onSubmit={formAction}>\r\n                <ModalDiv>\r\n                  <div className=\"form-group filebox\">\r\n                    <label htmlFor=\"img_file\">업로드</label>\r\n                    <input id=\"img_file\" type=\"file\" onChange={fileChange} />\r\n                  </div>\r\n                </ModalDiv>\r\n              </form>\r\n              <Input\r\n                mt={\"10px\"}\r\n                value={value.title}\r\n                onChange={(e) => {\r\n                  change(e, \"title\");\r\n                }}\r\n                mb=\"10px\"\r\n                placeholder=\"제목\"\r\n              />\r\n              <Input\r\n                value={value.content}\r\n                onChange={(e) => {\r\n                  change(e, \"content\");\r\n                }}\r\n                placeholder=\"내용\"\r\n              />\r\n            </ModalBody>\r\n          )}\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              mr={3}\r\n              onClick={formAction}\r\n              // onClick={() => {\r\n              //   action(\"delete\");\r\n              // }}\r\n            >\r\n              저장\r\n            </Button>\r\n            <Button colorScheme=\"red\" onClick={onClose}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Box, useDisclosure } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, List } from \"./style/todoStyle\";\r\nimport { ITodoReturn, ITodoList } from \"./types\";\r\nimport { ITodos, ITodoArr, ITodoDeleteData } from \"./../../types/todo\";\r\nimport { useEffect, useState } from \"react\";\r\nimport TodoAPI from \"../../api/todo\";\r\nimport { IModal } from \"../../main/components/Modal\";\r\nimport { success, Toast, error } from \"./../../utiis/toast\";\r\nimport { Media768 } from \"../../utiis/Media\";\r\nimport { IPostForm } from \"../../auth/types\";\r\n\r\nconst Todos = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\r\n\r\n  const [dataid, setDataId] = useState<string>(\"\");\r\n  const [file, setFile] = useState<any>();\r\n  const [value, setValue] = useState<ITodos>({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const [list, setList] = useState<ITodoArr>([\r\n    {\r\n      title: \"\",\r\n      content: \"\",\r\n      _id: \"\",\r\n      updatedAt: \"\",\r\n      createdAt: \"\",\r\n      seq: \"\",\r\n    },\r\n  ]);\r\n\r\n  const onSubmit: IPostForm = {\r\n    handleChange: (e) => {\r\n      if (e.target.files !== null) {\r\n        setFile({ img: e.target.files[0] });\r\n      }\r\n    },\r\n    handleSubmit: async (e) => {\r\n      e.preventDefault();\r\n      const formData = new FormData();\r\n      if (file !== undefined) {\r\n        formData.append(\"img\", file.img);\r\n      }\r\n      formData.append(\"title\", value.title);\r\n      formData.append(\"content\", value.content);\r\n      if (value.title === \"\") return error(\"제목을 입력하세요\");\r\n      if (value.content === \"\") return error(\"내용을 입력하세요\");\r\n\r\n      await TodoAPI.postTodo(formData)\r\n        .then((res) => {\r\n          console.log(res);\r\n          success(\"완료되었습니다\");\r\n          setValue((state) => ({ ...state, title: \"\", content: \"\" }));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n      onClose();\r\n    },\r\n  };\r\n\r\n  const toDoEvent: ITodoList = {\r\n    handleChange: (e, type) => {\r\n      setValue((state) => ({\r\n        ...state,\r\n        [type]: e.target.value,\r\n      }));\r\n    },\r\n    handleClick: async () => {\r\n      await TodoAPI.createToDo(value)\r\n        .then((res) => {\r\n          success(\"완료되었습니다\");\r\n        })\r\n        .catch((err) => {\r\n          error(err.response.data.details);\r\n        });\r\n      onClose();\r\n    },\r\n  };\r\n\r\n  const todoAPI: ITodoReturn = {\r\n    getData: async () => {\r\n      await TodoAPI.getToDo()\r\n        .then((res) => {\r\n          setList(res.data.data);\r\n        })\r\n        .catch((err) => {});\r\n    },\r\n    deleteData: async () => {\r\n      const data: ITodoDeleteData = {\r\n        seq: dataid,\r\n      };\r\n      await TodoAPI.deleteTodo(data)\r\n        .then((res) => {\r\n          success(\"삭제되었습니다\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        });\r\n      onClose();\r\n    },\r\n  };\r\n\r\n  const openModal = (btn: string) => {\r\n    if (btn === \"delete\") setModalStatus(true);\r\n    else setModalStatus(false);\r\n    onOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    todoAPI.getData();\r\n  }, [isOpen]);\r\n\r\n  // mobile{\r\n  //   padding:20px 20px;\r\n  //   }\r\n\r\n  //   pc{\r\n  //     padding:20px 40px;\r\n  //     max-width:550px;\r\n  //     margin:0 a\r\n  //     }\r\n\r\n  return (\r\n    <>\r\n      <Box p={Media768() ? \"20px 20px\" : \"20px 40px\"} maxWidth={Media768() ? \"\" : \"550px\"} m={Media768() ? \"\" : \"0 auto\"}>\r\n        <Box border=\" 1px solid #d1d1d1\" borderRadius=\"5px\">\r\n          <Container>\r\n            <ul>\r\n              {list.map((c) => {\r\n                return (\r\n                  <li key={c._id}>\r\n                    <List>\r\n                      <Link to={`/todolist/${c._id}`}>\r\n                        <p>{c.content}</p>\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => {\r\n                          setDataId(c.seq);\r\n                          openModal(\"delete\");\r\n                        }}\r\n                      >\r\n                        삭제\r\n                      </button>\r\n                    </List>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </Container>\r\n\r\n          <Box display=\"flex\" p=\" 0 20px 20px 20px\">\r\n            <IModal\r\n              title={modalStatus ? \"삭제\" : \"추가\"}\r\n              isOpen={isOpen}\r\n              onOpen={openModal}\r\n              onClose={onClose}\r\n              change={toDoEvent.handleChange}\r\n              action={modalStatus ? todoAPI.deleteData : toDoEvent.handleClick}\r\n              value={value}\r\n              modalStatus={modalStatus}\r\n              formAction={modalStatus ? todoAPI.deleteData : onSubmit.handleSubmit}\r\n              fileChange={onSubmit.handleChange}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Toast />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  font-family: \"bsfont-r\";\r\n  margin: 0;\r\n  padding: 20px;\r\n  min-height: 450px;\r\n  & > ul > li {\r\n    border-bottom: 1px solid #bbb;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  b\r\n  justify-content: space-between;\r\n  & > a {\r\n    width: 88%;\r\n    display: flex;\r\n  }\r\n  & > a > p {\r\n    padding-right: 10px;\r\n    width:100%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  & > button {\r\n    width: 12%;\r\n  }\r\n`;\r\n\r\nexport const DetailContainer = styled.div`\r\n  font-family: \"bsfont-r\";\r\n  margin: 0;\r\n  padding: 20px 20px 0 20px;\r\n  min-height: 200px;\r\n  font-size: 20px;\r\n  & input {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n  }\r\n  & > div > p {\r\n    min-width: 35px;\r\n  }\r\n  & > div > input {\r\n    min-width: 50px;\r\n    width: 100%;\r\n  }\r\n  & > div:first-child {\r\n    border-bottom: 1px solid #ddd;\r\n    padding-bottom: 5px;\r\n  }\r\n  & > div:nth-child(2) {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n    padding-bottom: 20px;\r\n  }\r\n  & > div > p.date {\r\n    text-align: right;\r\n    font-size: 14px;\r\n  }\r\n  & > .img_container > div {\r\n    display: felx;\r\n  }\r\n  & > .img_container > div > svg {\r\n    position: relative;\r\n    left: -30px;\r\n    min-width: 30px;\r\n  }\r\n`;\r\n","import { useMediaQuery } from \"react-responsive\";\r\n\r\nexport const Media768 = () => {\r\n  const mediaMobile = useMediaQuery({ query: \"(max-width:768px)\" });\r\n  return mediaMobile;\r\n};\r\n"],"names":["TodoAPI","createToDo","data","API","getToDo","deleteTodo","seq","detailTodo","id","updateTodo","postTodo","formData","getTodoImage","ModalDiv","styled","IModal","title","value","isOpen","modalStatus","change","onOpen","action","onClose","formAction","fileChange","size","color","onClick","blockScrollOnMount","onSubmit","className","htmlFor","type","onChange","I","mt","e","mb","placeholder","content","colorScheme","mr","useDisclosure","useState","setModalStatus","dataid","setDataId","file","setFile","setValue","_id","updatedAt","createdAt","list","setList","handleChange","target","files","img","handleSubmit","preventDefault","FormData","undefined","append","error","then","res","console","log","success","state","catch","err","response","toDoEvent","handleClick","details","todoAPI","getData","deleteData","openModal","btn","useEffect","p","Media768","maxWidth","m","border","borderRadius","map","c","to","display","Container","List","DetailContainer","useMediaQuery","query"],"sourceRoot":""}